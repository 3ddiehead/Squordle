
SQUORDLE
    // USER AUTH ---------------------------------------------------------------
    let uData = { name: localStorage.user,
                  region: localStorage.region,
                  pokeDollars: Number(localStorage.pokeDollars),
                  shuckleInfo: JSON.parse(localStorage.shuckleInfo),
                  inventory: JSON.parse(localStorage.inventory) };
    const [user, setUser] = useState(uData);

    function userHandler(data) 
    { 
        setUser(data); 
    }

    useEffect(() => {
        if (!(user.name === "guest")) {
            localStorage.user = user.name;
            localStorage.firstTime = false;
            localStorage.region = user.region;
            localStorage.pokeDollars = user.pokeDollars;
            localStorage.shuckleInfo = JSON.stringify(user.shuckleInfo);
            localStorage.inventory = JSON.stringify(user.inventory);
            if (user.shuckleInfo['adopted'] === true)
                localStorage.shopState = 8;
        } 
    }, [user]);
    // -------------------------------------------------------------------------


    const [filter, setFilter] = useState(JSON.parse(localStorage.genFilter));





    function filterHandler(x)
    {
        const i = "g" + x;
        const tempFilter = JSON.parse(localStorage.genFilter);
        tempFilter[`${i}`] = !tempFilter[`${i}`];
        localStorage.setItem("genFilter", JSON.stringify(tempFilter));
        setFilter(tempFilter);
    }


    useEffect(() => {
        function getDaily() 
        {
             let tempList = pokeList.filter(p => p.potd === "TRUE");
             tempList = tempList.sort(
                function(a, b) { return b.lastModified > a.lastModified }
             );
             return tempList[0].name;
        }



	return (
        <GameContext.Provider value={{
            gameMode, 
            toggleGameMode, 
            isGameOver, 
            setGameOver, 
            pokemon, 
            dollarHandler
        }}> 

            { !(pokemon === "eddie") &&  
                <GSDiv  id = "gsdiv"
                    pokeList = {pokeList}
                />
            }
        </GameContext.Provider>
	)
}

GS DIV - ---

    const { 
        gameMode, 
        isGameOver, 
        setGameOver, 
        pokemon, 
        dollarHandler 
    } = useContext(GameContext); 

    function renderGameSpace()
    {
        let boardState;
        if (Number(localStorage.gameMode) % 2 === 0) {  // DAILY
            if (JSON.parse(localStorage.boardState)['gameSpace'] === null) { 
                /*
                let temp = JSON.parse(localStorage.potd);
                temp["daily"] = pokeAnswer;
                localStorage.potd = JSON.stringify(temp);
                */

                boardState = boardInit(pokeAnswer);
                localStorage.boardState = JSON.stringify(boardState);
            }
            else
                boardState = JSON.parse(localStorage.boardState);
        }
        else // FREEPLAY
            boardState = boardInit(pokeAnswer);

        setFocus(boardState["focus"]);
        setGameSpace(boardState["gameSpace"]);
        setLetterStates(boardState["letterStates"]);
    }

    TAKE 2

    function renderGameSpace()
    {
        console.log("RENDERING GAMESPACE...");
        let boardState;

        if (Number(localStorage.gameMode) % 2 === 0) {  // DAILY
            const localStorageBoardState = 
                JSON.parse(localStorage.boardState)['gameSpace'];
            boardState = localStorageBoardState === null ? 
                boardInit(pokeAnswer) : localStorageBoardState;

            if (localStorageBoardState === null)
                localStorage.boardState = JSON.stringify(boardState);
        }
        else // FREEPLAY
            boardState = boardInit(pokeAnswer);

        setFocus(boardState['focus']);
        setGameSpace(boardState['gameSpace']);
        setLetterStates(boardState['letterStates']);
    }

    function handleWin(row, pointsWon)
    {   
        row.state = "winner";

        if (Number(localStorage.gameMode) % 2 === 0) {
            let temp = JSON.parse(localStorage.potd);
            temp["isWon"] = true;
            localStorage.potd = JSON.stringify(temp);
        }

        setGameOver([true, 'win']);
        setGameSpace(null);
        setFocus([-1, focus[1]]);
        pointsWon += 200;
    }

                { letterStates && 
                    <Keyboard  id = "keyboard" 
                        letterStates = {letterStates} 
                        handler = {keyDownHandler}
                        gameSpace = {gameSpace}
                        setGameSpace = {setGameSpace} 
                        validKeys = {validKeys}
                    /> 
                }

win lose display ---

        let dailyText = ".";
        if (gameMode % 2 === 0)
            dailyText = ". Check back again tomorrow for a new pokémon!"
        if (isGameOver[1] === 'win') {
            imgName = "WinTextLight";
            gameOverTxt = "The pokémon was " + answer[0].toUpperCase() + 
                answer.slice(1) + dailyText;
        } else {
            imgName = "LoseTextLight";
            gameOverTxt = "The correct pokémon was " + answer[0].toUpperCase() +
                answer.slice(1) + dailyText;
        }
